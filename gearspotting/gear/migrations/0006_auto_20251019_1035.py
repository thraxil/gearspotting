# Generated by Django 5.1.13 on 2025-10-19 14:35

from django.db import migrations

def update_all_contenttypes():
    from django.apps import apps
    from django.contrib.contenttypes.management import create_contenttypes

    for app_config in apps.get_app_configs():
        create_contenttypes(app_config)

def taggit_tags(apps, schema_editor):
    update_all_contenttypes()
    Gear = apps.get_model("gear", "Gear")
    ContentType = apps.get_model("contenttypes", "ContentType")
    ct = ContentType.objects.get(app_label="gear", model="gear")
    GearTag = apps.get_model("gear", "GearTag")
    TaggedItem = apps.get_model("taggit", "TaggedItem")
    Tag = apps.get_model("tag", "Tag")
    for g in Gear.objects.all():
        for t in TaggedItem.objects.filter(object_id=g.id, content_type_id=ct.id):
            try:
                tag = Tag.objects.get(name=t.tag.name)
            except:
                tag = Tag.objects.create(name=t.tag.name, slug=t.tag.slug)
            print(g.name, tag.name)
            GearTag.objects.create(gear=g, tag=tag)


class Migration(migrations.Migration):

    dependencies = [
        ('gear', '0005_geartag'),
    ]

    operations = [
        migrations.RunPython(taggit_tags, reverse_code=migrations.RunPython.noop)
    ]
