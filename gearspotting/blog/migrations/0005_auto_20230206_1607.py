# Generated by Django 3.2.16 on 2023-02-06 16:07

import re

import markdown
from django.db import migrations
from django.template.defaultfilters import slugify


def link_text(text):
    """goes through the text, finding references
    to manufacturers, gear, or musicians, and links
    to their pages.

    [[manufacturer:Name]]
    [[gear:ManufacturerName:Name]]
    [[musician:Name]]

    """
    pattern = re.compile(r"(\[\[[^\]]+\]\])")
    pattern2 = re.compile(r"\[\[([^\]]+)\]\]")
    results = []
    for part in pattern.split(text):
        m = pattern2.match(part)
        if m:
            parts = m.groups()[0].split(":")
            if parts[0].lower() == "gear":
                manufacturer_name = parts[1]
                gear_name = parts[2]
                part = """<a href="/gear/%s/">%s %s</a>""" % (
                    slugify(gear_name),
                    manufacturer_name,
                    gear_name,
                )
            if parts[0].lower() == "manufacturer":
                manufacturer_name = parts[1]
                part = """<a href="/manufacturer/%s/">%s</a>""" % (
                    slugify(manufacturer_name),
                    manufacturer_name,
                )
            if parts[0].lower() == "musician":
                musician_name = parts[1]
                part = """<a href="/musician/%s/">%s</a>""" % (
                    slugify(musician_name),
                    musician_name,
                )
        results.append(part)
    return "".join(results)


def forwards(apps, schema_editor):
    Post = apps.get_model('blog', 'Post')
    for post in Post.objects.all():
        linked_body = link_text(post.body)
        post.body_html = markdown.markdown(linked_body)
        post.save()


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0004_post_body_html'),
    ]

    operations = [
        migrations.RunPython(forwards, migrations.RunPython.noop),
    ]
